varnishtest "Test resp_top.* in an ESI context"

# based on e30.vtc (req_top)

server s1 {
	rxreq
	txresp -body {
		<html>
		Before include
		<esi:include src="/a"/>
		<esi:include src="/b"/>
		After include
		</html>
	}

	rxreq
	expect req.url == "/a1"
	txresp -body {
		Included file
		<esi:include src="/c"/>
	}

	rxreq
	expect req.url == "/c2"
	txresp

	rxreq
	expect req.url == "/b1"
	txresp
} -start

varnish v1 -arg "-p feature=+esi_disable_xml_check" -vcl+backend {} -start

varnish v1 -errvcl {Variable 'resp_top.proto' is read only.} {
	sub vcl_deliver {
		set resp_top.proto = "foo";
	}
}

varnish v1 -errvcl {Variable 'resp_top.status' is read only.} {
	sub vcl_deliver {
		set resp_top.status = 500;
	}
}

varnish v1 -errvcl {Variable 'resp_top.reason' is read only.} {
	sub vcl_deliver {
		set resp_top.reason = "foo";
	}
}

varnish v1 -vcl+backend {
	sub recv_test_runtime_access {
	    if (req.url == "/level0readrecv") {
		set req.http.foo = resp_top.http.foo;
		return (synth(200));
	    }
	    if (req.url == "/level0writerecv") {
		set resp_top.http.foo = req.http.foo;
		return (synth(200));
	    }
	}
	sub vcl_recv {
	    if (req.esi_level > 0) {
		set req.url = req.url + req.esi_level;
		return (hash);
	    }

	    call recv_test_runtime_access;
	}
	sub deliver_esi {
	    if (resp_top.http.X-ESI) {
		set resp_top.http.X-ESI = resp_top.http.X-ESI + ":" + req.url;
	    } else {
		set resp_top.http.X-ESI = req.url;
	    }
	    return (deliver);
	}
	sub vcl_deliver {
	    if (req.esi_level > 0) {
		call deliver_esi;
	    }
	    if (req.http.TE == "trailers") {
		set resp.http.Trailer = "X-ESI";
	    }
	    unset resp.http.Vary;
	    set resp.http.hits = obj.hits;
	}
	sub vcl_backend_response {
	    set beresp.do_esi = true;
	}
}

logexpect l1 -v v1 -g raw {
	expect * * VCL_Error {^resp_top.http.foo not accessible at esi level 0 outside vcl_deliver/vcl_synth$}
	expect * * VCL_Error {^resp_top.http.foo not writable at esi level 0 outside vcl_deliver/vcl_synth$}
#	expect * * VCL_Error {^resp_top.http.X-ESI not writable unless sending Trailers$}
} -start

client c1 {
	txreq -url "/level0readrecv"
	rxresp
	expect resp.status == 503
	expect resp.reason == "VCL failed"
} -run
client c1 {
	txreq -url "/level0writerecv"
	rxresp
	expect resp.status == 503
	expect resp.reason == "VCL failed"
} -run
client c1 {
	txreq -hdr "TE: trailers"
	rxresp
	expect resp.status == 200
	expect resp.bodylen == 81
	expect resp.http.Trailer == "X-ESI"
	expect resp.http.X-ESI == "/a1:/c2:/b1"
	expect resp.http.hits == "0"

	# this fails at esi level 1 - body contains "503 VCL failed"
	txreq
	rxresp
	expect resp.status == 200
	expect resp.http.X-ESI == <undef>
	expect resp.bodylen == 562

	txreq -hdr "TE: trailers"
	rxresp
	expect resp.status == 200
	expect resp.bodylen == 81
	expect resp.http.Trailer == "X-ESI"
	expect resp.http.X-ESI == "/a1:/c2:/b1"
	expect resp.http.hits == "2"
} -run

varnish v1 -expect esi_errors == 0
logexpect l1 -wait
